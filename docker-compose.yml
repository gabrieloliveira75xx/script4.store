services:
  traefik:
    image: traefik:v3.4
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build: ./front-end
    container_name: script4store-frontend
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`script4.store`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: ./back-end
    container_name: script4store-backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`script4.store`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=16000"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
